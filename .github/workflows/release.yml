name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            target: x86_64-apple-darwin
            name: macOS-intel
          - platform: macos-latest
            target: aarch64-apple-darwin
            name: macOS-apple-silicon
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x64
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Music Mosaic ${{ github.ref_name }}'
          releaseBody: |
            Changes in this Release:
            ${{ github.event.head_commit.message }}
            
            Download the appropriate installer for your operating system:
            - macOS Intel (x86_64): For Intel-based Macs
            - macOS Apple Silicon (arm64): For M1/M2/M3 Macs
            - Linux: For 64-bit Linux systems
            - Windows: For 64-bit Windows systems
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.target }}

  update-latest-tag:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Move latest tag
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git tag -fa latest -m "Latest release"
          git push origin latest --force